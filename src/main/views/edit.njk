{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% extends "template.njk" %}


{% block content %}

  <div class="govuk-width-container">

    <div role="region" aria-label="go-back"> 
      <a href="/" class="govuk-back-link govuk-! display-none-print"> Back </a>
    </div>

    {% if task %}
    <form method="post" id="taskFormUpdate" data-task-id="{{ task.id }}">
        <div class=" govuk-!-margin-top-5">
            <h1 class="govuk-heading-xl">Update Task</h1>

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-body-m">Task: </dt>
                <dd class="govuk-summary-list__value govuk-body-m"> {{ task.title }} </dd>
            </div>

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-body-m">Status: </dt>
                <dd class="govuk-summary-list__value govuk-body-m"> 

                  {{ govukSelect({
                    label: {
                      text: ""
                    },
                    id: "status",
                    name: "status_id",
                    value: task.status_id,
                    items: statusOptions
                  }) }}
                </dd>
            </div>
        
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key govuk-body-m">Due date/time: </dt>
                <dd class="govuk-summary-list__value govuk-body-m"> {{ task.due_date }} </dd>
            </div>
        
        </div>

        <div class="govuk-!-margin-top-5">
            <p class="govuk-body">{{ task.description }}</p>
        </div>
        {% else %}
        <p class="govuk-body govuk-!-text-align-center govuk-!-margin-top-9">This task has either been deleted or does not exist.</p>
        {% endif %}
        
        {{ govukButton({
            text: "Cancel",
            href: "/",
            classes: "govuk-button--secondary"
          }) }}

        {{ govukButton({
            text: "Save",
            type: "submit"
          }) }}

    </form>
    
    <script>

        document.getElementById('taskFormUpdate').addEventListener('submit', function(event) {
          event.preventDefault();
    
          const statusField = document.getElementById('status');
          let hasErrors = false;
    
          function setError(fieldId, message) {
            const field = document.getElementById(fieldId);
            let errorElement = document.getElementById(fieldId + '-error');
    
            if (!field.value.trim()) 
            {
              hasErrors = true;
              field.classList.add('govuk-input--error');
    
              if (!errorElement) 
              {
                errorElement = document.createElement('span');
                errorElement.id = fieldId + '-error';
                errorElement.className = 'govuk-error-message';
                field.parentNode.insertBefore(errorElement, field.nextSibling);
              }
              errorElement.textContent = message;
              errorElement.style.display = 'block';
            } 
            else
            {
              field.classList.remove('govuk-input--error');
              if (errorElement) 
              {
                errorElement.style.display = 'none';
              }
            }
          }

          setError('status', 'Status is required');
    
          // If there are no errors, proceed with the form submission
          if (!hasErrors)
          {
            const taskId = this.getAttribute('data-task-id');
            this.action = `/update/${taskId}`;
            this.submit();
          }
        });
        
    </script>
  </div>


{% endblock %}
